<?php

namespace Tests;

use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\TestCase as BaseTestCase;
use Illuminate\Foundation\Testing\WithFaker;
use Illuminate\Http\Resources\Json\JsonResource;
use Illuminate\Support\Collection;
use Illuminate\Support\Facades\Artisan;

abstract class TestCase extends BaseTestCase
{
    use CreatesApplication;
    use RefreshDatabase;
    use WithFaker;

    /**
     * @return void
     */
    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        Artisan::call('db:seed');
    }

    /**
     * @param string $path
     * @return mixed
     */
    public function loadData(string $path)
    {
        $path = sprintf(
            '%s/_data/%s.php',
            dirname(__FILE__),
            str_replace('.', '/', $path)
        );
        return require $path;
    }
    /**
     * @param mixed $resource
     * @return array
     */
    public function resolveResource($resource): array
    {
        if (!is_array($resource)) {
            $resource = $resource instanceof Collection ? $resource->toArray() : $resource->resolve();
        }
        if (is_array($resource)) {
            foreach ($resource as $key => $value) {
                if ($value instanceof JsonResource || is_array($value)) {
                    $resource[$key] = $this->resolveResource($value);
                }
                if ($value instanceof Collection) {
                    $resource[$key] = $value->toArray();
                }
            }
        }
        return $resource;
    }
}
